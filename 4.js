console.log("Завдання: 4 ==============================");

// Функція task4, яка буде використовувати проміси
function task4() {
  // Визначаємо перший проміс з іменем promise1
  function promise1() {
  // Функція promise1, повертає новий проміс
  return new Promise((resolve) => {
    // Використовуємо функцію setTimeout, щоб симулювати асинхронну операцію
    // Ця функція приймає два аргументи: функцію, яку потрібно викликати після певного часу, і час у мілісекундах (1000 мс = 1 с)
    setTimeout(() => {
      // Після 1 секунди викликаємо функцію resolve, яка змінює стан проміса на "виконано" і передає значення 'Проміс 1 виконано'
      resolve('Проміс 1 виконано');
    }, 1000);
  });
  }
  // Визначаємо другий проміс з іменем promise2
  function promise2() {
  // Функція promise2, повертає новий проміс
  return new Promise((resolve) => {
    // Використовуємо функцію setTimeout, щоб симулювати асинхронну операцію з затримкою 1сек
    setTimeout(() => {
    // Після 1 секунди викликаємо функцію resolve, яка змінює стан проміса на "виконано" і передає значення 'Проміс 2 виконано'
    resolve('Проміс 2 виконано');
    }, 1000);
  });
  }
  // Promise.all приймає масив промісів і повертає новий проміс, який вирішується, коли всі вхідні проміси вирішені
  Promise.all([promise1(), promise2()])
  // Функція then викликається, коли проміс вирішений
  .then((results) => {
  // Результати всіх вхідних промісів передаються у функцію then у вигляді масиву, виводимо в консоль масив
  // ['Проміс 1 виконано', 'Проміс 2 виконано']
  console.log('Результати промісів:', results);
  })
  // Функція catch викликається, коли будь-який з промісів відхилено
  .catch((error) => {
  // Повідомлення про помилку від першого відхиленого проміса передається у функцію catch, виводимо в консоль помилку
  console.error('Помилка:', error);
  })
  // Функція finally викликається незалежно від того, чи вирішено проміс, чи відхилено
  .finally(() => {
    // Функція finally викликається незалежно від того, чи вирішено проміси чи відхилено
    // Виводимо в консоль "Всі операції завершено"
    console.log('Всі операції завершено');
  });
}

// Викликаємо функцію task4
task4();
